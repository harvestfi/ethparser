spring:
  jpa:
    #    open-in-view: true
    database: postgresql
    #    show-sql: true
    hibernate:
      ddl-auto: update
    properties.hibernate:
      dialect: org.hibernate.dialect.PostgreSQLDialect
      jdbc.lob.non_contextual_creation: true

  datasource:
    platform: postgresql
    driver-class-name: org.postgresql.Driver
    url:
    username:
    password:
    hikari:
      maximum-pool-size: 5
    # non test db load only views and functions!
    # should load in ordering views - functions
    data: >
      classpath:sql/vault_actions_view.sql,
      classpath:sql/functions.sql

    initialization-mode: always

server:
  port: 8080
  ssl:
    enabled: false
    key-store-type: PKCS12
    key-store:
    key-alias:
    key-store-password:
  servlet:
    session.timeout: 10m
    multipart:
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 2MB
      max-request-size: 2MB
  tomcat:
    accept-count: 1000 # Maximum queue length for incoming connection requests when all possible request processing threads are in use.
    max-connections: 1000 # Maximum number of connections that the server accepts and processes at any given time.
    max-threads: 1000 # Maximum amount of worker threads.
    min-spare-threads: 10 # Minimum amount of worker threads.
    uri-encoding: UTF-8 # Character encoding to use to decode the URI.

management:
  server:
    port: 8080 # on heroku use same port as tomcat server port
  endpoints:
    enabled-by-default: false
    web:
      exposure.include: prometheus
  endpoint:
    prometheus:
      enabled: true
      cache.time-to-live: 10s

task:
  pool:
    fixedRate: 3600000 # Each hour
    enable: false
  vault:
    fixedRate: 3600000 # Each hour
    enable: false
  uni-pair:
    fixedRate: 86400000 # Everyday
    enable: false
  transaction:
    max-thread-size: 30
    fixedRate: 86400000 # Everyday
    enable: false
  

